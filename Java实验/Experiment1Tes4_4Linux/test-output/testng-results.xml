<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-17T04:29:34Z" name="All Test Suite" finished-at="2021-05-17T04:29:36Z" duration-ms="1640">
    <groups>
    </groups>
    <test started-at="2021-05-17T04:29:34Z" name="betest/hust/cs/javacourse/search/index/TermTest.java" finished-at="2021-05-17T04:29:34Z" duration-ms="51">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@67e2d983]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@5d47c63f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testTestToString" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@4de5031f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testSetContent" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@52aa2946]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testGetContent" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testWriteObject" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@528931cf]" started-at="2021-05-17T04:29:34Z" name="testReadObject" data-provider="testTerm" finished-at="2021-05-17T04:29:34Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="7">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@9a7504c]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@23282c25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@9a7504c]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@4b168fa9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@9a7504c]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1a84f40f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@9a7504c]" started-at="2021-05-17T04:29:35Z" name="testTestToString" data-provider="testTermTuple" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AbstractTermTuple{term=Search, freq=1, curPos=100}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7920ba90]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="18">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@60611244]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6ab7a896]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@327b636c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@45dd4eda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testTestToString" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5e4c8041]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3745e5c6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testGetFreq" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testSetDocId" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=20, freq=0, positions=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testGetDocId" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testSetFreq" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=0, freq=8, positions=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testGetPositions" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testSetPositions" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=0, freq=0, positions=[100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testCompareTo" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@15761df8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testSort" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testWriteObject" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@60285225]" started-at="2021-05-17T04:29:35Z" name="testReadObject" data-provider="testPosting" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="15">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testAdd" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@527e5409]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testTestToString" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1d76aeea]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testTestAdd" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}, Posting{docId=1, freq=4, positions=[2, 4, 3, 1]}, Posting{docId=2, freq=2, positions=[5, 6]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testContains" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1198b989]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4b44655e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testGet" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@7ff95560]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testRemove" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2aa3cd93]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testIndexOf" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@add0edd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testClear" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testTestRemove" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@290d210d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testSort" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=2, freq=4, positions=[5, 9, 7, 8]}->Posting{docId=3, freq=2, positions=[10, 11]}->Posting{docId=4, freq=4, positions=[1, 4, 3, 2]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@7ea37dbf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testWriteObject" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:35Z" name="testReadObject" data-provider="testPostingList" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId=1, freq=4, positions=[1, 2, 3, 4]}->Posting{docId=2, freq=2, positions=[5, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testGetDocId" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testSetDocId" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 2, docPath: null, tuples:
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testGetDocPath" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testSetDocPath" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: C:/2.txt, tuples:
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testGetTuples" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}AbstractTermTuple{term=bbb, freq=1, curPos=30}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=17}, AbstractTermTuple{term=bbb, freq=1, curPos=30}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testContains" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}AbstractTermTuple{term=bbb, freq=1, curPos=30}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AbstractTermTuple{term=aaa, freq=1, curPos=17}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testAddTuple" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AbstractTermTuple{term=aaa, freq=1, curPos=17}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testGetTuple" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}AbstractTermTuple{term=bbb, freq=1, curPos=30}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=17}, AbstractTermTuple{term=bbb, freq=1, curPos=30}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}AbstractTermTuple{term=bbb, freq=1, curPos=30}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testContains" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}AbstractTermTuple{term=bbb, freq=1, curPos=30}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AbstractTermTuple{term=bbb, freq=1, curPos=30}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@6121c9d6]" started-at="2021-05-17T04:29:35Z" name="testTestToString" data-provider="testDocument" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 1, docPath: C:/1.txt, tuples:
AbstractTermTuple{term=aaa, freq=1, curPos=17}AbstractTermTuple{term=bbb, freq=1, curPos=30}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6293abcc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="16">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@491cc5c9]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@60704c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=0}, AbstractTermTuple{term=bbb, freq=1, curPos=1}, AbstractTermTuple{term=ccc, freq=1, curPos=2}, AbstractTermTuple{term=ddd, freq=1, curPos=3}, AbstractTermTuple{term=is, freq=1, curPos=4}, AbstractTermTuple{term=f17, freq=1, curPos=5}, AbstractTermTuple{term=2020, freq=1, curPos=6}, AbstractTermTuple{term=ab, freq=1, curPos=7}, AbstractTermTuple{term=ababababababababababab, freq=1, curPos=8}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@491cc5c9]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@6b19b79]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=activity, freq=1, curPos=0}, AbstractTermTuple{term=destination, freq=1, curPos=1}, AbstractTermTuple{term=emergency, freq=1, curPos=2}, AbstractTermTuple{term=26%, freq=1, curPos=3}, AbstractTermTuple{term=u571, freq=1, curPos=4}, AbstractTermTuple{term=because, freq=1, curPos=5}, AbstractTermTuple{term=hence, freq=1, curPos=6}, AbstractTermTuple{term=capital, freq=1, curPos=7}, AbstractTermTuple{term=i, freq=1, curPos=8}, AbstractTermTuple{term=frozen, freq=1, curPos=9}, AbstractTermTuple{term=benefits, freq=1, curPos=10}, AbstractTermTuple{term=google, freq=1, curPos=11}, AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}, AbstractTermTuple{term=ha, freq=1, curPos=13}, AbstractTermTuple{term=frozen, freq=1, curPos=14}, AbstractTermTuple{term=google, freq=1, curPos=15}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- betest/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="7">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@8646db9]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@5bfa9431]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=0}, AbstractTermTuple{term=bbb, freq=1, curPos=1}, AbstractTermTuple{term=ccc, freq=1, curPos=2}, AbstractTermTuple{term=ddd, freq=1, curPos=3}, AbstractTermTuple{term=f17, freq=1, curPos=4}, AbstractTermTuple{term=2020, freq=1, curPos=5}, AbstractTermTuple{term=ab, freq=1, curPos=6}, AbstractTermTuple{term=ababababababababababab, freq=1, curPos=7}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@8646db9]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@223f3642]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=activity, freq=1, curPos=0}, AbstractTermTuple{term=destination, freq=1, curPos=1}, AbstractTermTuple{term=emergency, freq=1, curPos=2}, AbstractTermTuple{term=26%, freq=1, curPos=3}, AbstractTermTuple{term=u571, freq=1, curPos=4}, AbstractTermTuple{term=capital, freq=1, curPos=7}, AbstractTermTuple{term=frozen, freq=1, curPos=9}, AbstractTermTuple{term=benefits, freq=1, curPos=10}, AbstractTermTuple{term=google, freq=1, curPos=11}, AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}, AbstractTermTuple{term=ha, freq=1, curPos=13}, AbstractTermTuple{term=frozen, freq=1, curPos=14}, AbstractTermTuple{term=google, freq=1, curPos=15}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@8646db9]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@5db250b4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=0}, AbstractTermTuple{term=bbb, freq=1, curPos=1}, AbstractTermTuple{term=ccc, freq=1, curPos=3}, AbstractTermTuple{term=ddd, freq=1, curPos=4}, AbstractTermTuple{term=f17, freq=1, curPos=6}, AbstractTermTuple{term=2020, freq=1, curPos=7}, AbstractTermTuple{term=ab, freq=1, curPos=8}, AbstractTermTuple{term=ababababababababababab, freq=1, curPos=10}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- betest/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="6">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@7cbd213e]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@ec756bd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=0}, AbstractTermTuple{term=bbb, freq=1, curPos=2}, AbstractTermTuple{term=ab, freq=1, curPos=3}, AbstractTermTuple{term=ccc, freq=1, curPos=4}, AbstractTermTuple{term=ddd, freq=1, curPos=5}, AbstractTermTuple{term=ababababababababababab, freq=1, curPos=7}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@7cbd213e]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@3c72f59f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=activity, freq=1, curPos=0}, AbstractTermTuple{term=destination, freq=1, curPos=1}, AbstractTermTuple{term=emergency, freq=1, curPos=2}, AbstractTermTuple{term=because, freq=1, curPos=5}, AbstractTermTuple{term=hence, freq=1, curPos=6}, AbstractTermTuple{term=capital, freq=1, curPos=7}, AbstractTermTuple{term=i, freq=1, curPos=8}, AbstractTermTuple{term=frozen, freq=1, curPos=9}, AbstractTermTuple{term=benefits, freq=1, curPos=10}, AbstractTermTuple{term=google, freq=1, curPos=11}, AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}, AbstractTermTuple{term=ha, freq=1, curPos=13}, AbstractTermTuple{term=frozen, freq=1, curPos=14}, AbstractTermTuple{term=google, freq=1, curPos=15}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- betest/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@7a30d1e6]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@11a9e7c8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=0}, AbstractTermTuple{term=bbb, freq=1, curPos=1}, AbstractTermTuple{term=ccc, freq=1, curPos=3}, AbstractTermTuple{term=ddd, freq=1, curPos=4}, AbstractTermTuple{term=f17, freq=1, curPos=5}, AbstractTermTuple{term=2020, freq=1, curPos=6}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@7a30d1e6]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@3901d134]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=activity, freq=1, curPos=0}, AbstractTermTuple{term=destination, freq=1, curPos=1}, AbstractTermTuple{term=emergency, freq=1, curPos=2}, AbstractTermTuple{term=26%, freq=1, curPos=3}, AbstractTermTuple{term=u571, freq=1, curPos=4}, AbstractTermTuple{term=because, freq=1, curPos=5}, AbstractTermTuple{term=hence, freq=1, curPos=6}, AbstractTermTuple{term=capital, freq=1, curPos=7}, AbstractTermTuple{term=frozen, freq=1, curPos=9}, AbstractTermTuple{term=benefits, freq=1, curPos=10}, AbstractTermTuple{term=google, freq=1, curPos=11}, AbstractTermTuple{term=frozen, freq=1, curPos=14}, AbstractTermTuple{term=google, freq=1, curPos=15}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- betest/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4e718207]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-17T04:29:35Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@45018215]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=aaa, freq=1, curPos=1}, AbstractTermTuple{term=bbb, freq=1, curPos=2}, AbstractTermTuple{term=ccc, freq=1, curPos=4}, AbstractTermTuple{term=ddd, freq=1, curPos=6}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@4e718207]" started-at="2021-05-17T04:29:35Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@65d6b83b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[AbstractTermTuple{term=activity, freq=1, curPos=0}, AbstractTermTuple{term=destination, freq=1, curPos=1}, AbstractTermTuple{term=emergency, freq=1, curPos=2}, AbstractTermTuple{term=capital, freq=1, curPos=7}, AbstractTermTuple{term=frozen, freq=1, curPos=9}, AbstractTermTuple{term=benefits, freq=1, curPos=10}, AbstractTermTuple{term=google, freq=1, curPos=11}, AbstractTermTuple{term=frozen, freq=1, curPos=14}, AbstractTermTuple{term=google, freq=1, curPos=15}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- betest/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2021-05-17T04:29:35Z" duration-ms="500">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@2a70a3d8]" started-at="2021-05-17T04:29:35Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-17T04:29:35Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: /Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=26%, freq=1, curPos=3}AbstractTermTuple{term=u571, freq=1, curPos=4}AbstractTermTuple{term=because, freq=1, curPos=5}AbstractTermTuple{term=hence, freq=1, curPos=6}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=i, freq=1, curPos=8}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}AbstractTermTuple{term=ha, freq=1, curPos=13}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=26%, freq=1, curPos=3}AbstractTermTuple{term=u571, freq=1, curPos=4}AbstractTermTuple{term=because, freq=1, curPos=5}AbstractTermTuple{term=hence, freq=1, curPos=6}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=i, freq=1, curPos=8}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}AbstractTermTuple{term=ha, freq=1, curPos=13}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@2a70a3d8]" started-at="2021-05-17T04:29:35Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: /Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=26%, freq=1, curPos=3}AbstractTermTuple{term=u571, freq=1, curPos=4}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}AbstractTermTuple{term=ha, freq=1, curPos=13}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=26%, freq=1, curPos=3}AbstractTermTuple{term=u571, freq=1, curPos=4}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}AbstractTermTuple{term=ha, freq=1, curPos=13}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@2a70a3d8]" started-at="2021-05-17T04:29:35Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: /Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=because, freq=1, curPos=5}AbstractTermTuple{term=hence, freq=1, curPos=6}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=i, freq=1, curPos=8}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}AbstractTermTuple{term=ha, freq=1, curPos=13}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=because, freq=1, curPos=5}AbstractTermTuple{term=hence, freq=1, curPos=6}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=i, freq=1, curPos=8}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=hahahahahahahahahahahahah, freq=1, curPos=12}AbstractTermTuple{term=ha, freq=1, curPos=13}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@2a70a3d8]" started-at="2021-05-17T04:29:35Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: /Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=26%, freq=1, curPos=3}AbstractTermTuple{term=u571, freq=1, curPos=4}AbstractTermTuple{term=because, freq=1, curPos=5}AbstractTermTuple{term=hence, freq=1, curPos=6}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=26%, freq=1, curPos=3}AbstractTermTuple{term=u571, freq=1, curPos=4}AbstractTermTuple{term=because, freq=1, curPos=5}AbstractTermTuple{term=hence, freq=1, curPos=6}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@2a70a3d8]" started-at="2021-05-17T04:29:35Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: /Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@2a70a3d8]" started-at="2021-05-17T04:29:35Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: /Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@2a70a3d8]" started-at="2021-05-17T04:29:35Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ docId: 0, docPath: /Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 0, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2021-05-17T04:29:35Z" name="betest/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2021-05-17T04:29:36Z" duration-ms="511">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:35Z" name="testTestToString" data-provider="testIndex" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4ff8d125]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:35Z" name="testAddDocument" data-provider="testIndex" finished-at="2021-05-17T04:29:35Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@39ac0c0a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{ docId: 1, docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples:
AbstractTermTuple{term=activity, freq=1, curPos=0}AbstractTermTuple{term=destination, freq=1, curPos=1}AbstractTermTuple{term=emergency, freq=1, curPos=2}AbstractTermTuple{term=capital, freq=1, curPos=7}AbstractTermTuple{term=frozen, freq=1, curPos=9}AbstractTermTuple{term=benefits, freq=1, curPos=10}AbstractTermTuple{term=google, freq=1, curPos=11}AbstractTermTuple{term=frozen, freq=1, curPos=14}AbstractTermTuple{term=google, freq=1, curPos=15}}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:35Z" name="testLoad" data-provider="testIndex" finished-at="2021-05-17T04:29:35Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:35Z" name="testSave" data-provider="testIndex" finished-at="2021-05-17T04:29:35Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:35Z" name="testSearch" data-provider="testIndex" finished-at="2021-05-17T04:29:35Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:36Z" name="testGetDictionary" data-provider="testIndex" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:36Z" name="testWriteObject" data-provider="testIndex" finished-at="2021-05-17T04:29:36Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:36Z" name="testReadObject" data-provider="testIndex" finished-at="2021-05-17T04:29:36Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:36Z" name="testOptimize" data-provider="testIndex" finished-at="2021-05-17T04:29:36Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@64485a47]" started-at="2021-05-17T04:29:36Z" name="testGetDocName" data-provider="testIndex" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c7ba306]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2021-05-17T04:29:36Z" name="betest/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2021-05-17T04:29:36Z" duration-ms="51">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@10dba097]" started-at="2021-05-17T04:29:36Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/text/1.txt
1---->/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/text/2.txt
2---->/Users/justinxiang/Desktop/Java_lab/Experiment1Tes4_4Linux/test/text/3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId ---- docPath mapping
0---->D:\IdeaWorkspace\SeachEngine\text\1.txt
1---->D:\IdeaWorkspace\SeachEngine\text\2.txt
2---->D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}->Posting{docId=1, freq=1, positions=[0]}
benefits---->Posting{docId=0, freq=2, positions=[2, 7]}->Posting{docId=1, freq=1, positions=[10]}
capital---->Posting{docId=0, freq=2, positions=[3, 8]}->Posting{docId=1, freq=1, positions=[7]}
destination---->Posting{docId=0, freq=2, positions=[4, 9]}->Posting{docId=1, freq=1, positions=[1]}
emergency---->Posting{docId=0, freq=1, positions=[10]}->Posting{docId=1, freq=1, positions=[2]}
fizzy---->Posting{docId=0, freq=1, positions=[5]}
frozen---->Posting{docId=1, freq=2, positions=[9, 14]}
google---->Posting{docId=1, freq=2, positions=[11, 15]}
marketplace---->Posting{docId=2, freq=1, positions=[0]}
medical---->Posting{docId=2, freq=1, positions=[1]}
notification---->Posting{docId=2, freq=1, positions=[3]}
peninsula---->Posting{docId=2, freq=1, positions=[5]}
pollution---->Posting{docId=2, freq=1, positions=[7]}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- betest/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2021-05-17T04:29:36Z" name="betest/hust/cs/javacourse/search/query/HitTest.java" finished-at="2021-05-17T04:29:36Z" duration-ms="68">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism

score: -3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 1

docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt

content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google

score: -1.0

activity---->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism

score: -3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 1

docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt

content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google

score: -1.0

activity---->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 1

docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt

content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google

score: -1.0

activity---->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism

score: -3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: new content1

score: -3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 1

docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt

content: new content2

score: -1.0

activity---->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism

score: -3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 1

docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt

content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google

score: -1.0

activity---->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 1

docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt

content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google

score: 1.0

activity---->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism

score: 3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism

score: -3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 1

docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt

content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google

score: -1.0

activity---->Posting{docId=1, freq=1, positions=[0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testTestToString" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[
------------------------

docId: 0

docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt

content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism

score: -3.0

activity---->Posting{docId=0, freq=3, positions=[0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7b420819]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@4d1b0d2a]" started-at="2021-05-17T04:29:36Z" name="testCompareTo" data-provider="testHit" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@35432107]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- betest/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2021-05-17T04:29:36Z" name="betest/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2021-05-17T04:29:36Z" duration-ms="56">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@262b2c86]" started-at="2021-05-17T04:29:34Z" name="beforeSuite" finished-at="2021-05-17T04:29:34Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@4cf4d528]" started-at="2021-05-17T04:29:36Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-17T04:29:36Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@3ad2e17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@8c3619e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@4cf4d528]" started-at="2021-05-17T04:29:36Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-17T04:29:36Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@4331d187]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@6f63b475]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@4cf4d528]" started-at="2021-05-17T04:29:36Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2021-05-17T04:29:36Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@554e218]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@1608bcbd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- betest/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
